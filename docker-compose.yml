version: '3.8'

services:
  backend:
    container_name: backend
    build: 
      context: ./backend
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - CORS_ORIGINS=https://configen.frist-it.online,https://www.configen.frist-it.online
    networks:
      - app_network
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=https://api-configen.frist-it.online/api  # Убедитесь, что здесь правильный URL для API
    environment:
      - VITE_API_URL=https://api-configen.frist-it.online/api   # Убедитесь, что здесь правильный URL для API
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app_network
    restart: always


  postgres:
    image: postgres:15
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app_network    # ← добавьте эту строку
    restart: always


  cloudflared:
    image: cloudflare/cloudflared
    container_name: cloudflared
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
    env_file: .env
    networks:
      - app_network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped



networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: